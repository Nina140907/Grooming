
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаписьКлиента") Тогда
		Клиент = ДанныеЗаполнения.Клиент;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Основание = ДанныеЗаполнения.Ссылка;
		Для Каждого ТекСтрокаУслуги Из ДанныеЗаполнения.Услуги Цикл
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Сумма = ТекСтрокаУслуги.Стоимость;
			НоваяСтрока.Услуга = ТекСтрокаУслуги.Услуга;
		КонецЦикла;
	КонецЕсли;   
	
	КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим) 
	
	Движения.ТоварыНаСкладах.Записывать = Истина;  
	Движения.Продажи.Записывать = Истина;   
	Движения.УчетЗатрат.Записывать = Истина;
	Движения.ЗаказыКлиентов.Записывать = Истина; 
	Движения.Хозрасчетный.Записывать = Истина;
	Движения.ТоварыНаСкладах.Записать(); 
	  	
		
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары; 
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Товар");
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	Блокировка.Заблокировать();    

	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровИУслугТовары.Товар КАК Номенклатура,
	               |	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
	               |	СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма,
	               |	РеализацияТоваровИУслугТовары.Ссылка.Склад КАК Склад
	               |ПОМЕСТИТЬ ВТ_Товары
	               |ИЗ
	               |	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	               |ГДЕ
	               |	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияТоваровИУслугТовары.Товар,
	               |	РеализацияТоваровИУслугТовары.Ссылка.Склад
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РеализацияТоваровИУслугУслуги.Услуга,
	               |	NULL,
	               |	СУММА(РеализацияТоваровИУслугУслуги.Сумма),
	               |	NULL
	               |ИЗ
	               |	Документ.РеализацияТоваровИУслуг.Услуги КАК РеализацияТоваровИУслугУслуги
	               |ГДЕ
	               |	РеализацияТоваровИУслугУслуги.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияТоваровИУслугУслуги.Услуга
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Склад
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Товары.Номенклатура КАК Номенклатура,
	               |	ВТ_Товары.Количество КАК КоличествоВДокументе,
	               |	ВТ_Товары.Сумма КАК СуммаВДокументе,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	               |	ВЫБОР
	               |		КОГДА ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ЭтоТовар,
	               |	ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление,
	               |	ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
	               |	ВТ_Товары.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	               |	ВТ_Товары.Склад КАК Склад,
	               |	ВТ_Товары.Номенклатура.СчетБухгалтерскогоУчета КАК СчетБухгалтерскогоУчета
	               |ИЗ
	               |	ВТ_Товары КАК ВТ_Товары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |				&МоментВремени,
	               |				(Номенклатура, Склад) В
	               |					(ВЫБРАТЬ
	               |						ВТ_Товары.Номенклатура,
	               |						ВТ_Товары.Склад
	               |					ИЗ
	               |						ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
	               |		ПО ВТ_Товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |			И ВТ_Товары.Склад = ТоварыНаСкладахОстатки.Склад
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СрокГодности
	               |ИТОГИ
	               |	МАКСИМУМ(КоличествоВДокументе),
	               |	МАКСИМУМ(СуммаВДокументе),
	               |	СУММА(КоличествоОстаток)
	               |ПО
	               |	Номенклатура";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));  
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
	
		Если ВыборкаНоменклатура.ЭтоТовар Тогда
		
			СтоимостьОбщая = 0;
			Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток;
				Если Превышение > 0 Тогда
			        ЗапретПроведения =  Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить();
					Если ЗапретПроведения Тогда
						Сообщение = Новый СообщениеПользователю;
						Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1"" в количестве ""%2""",ВыборкаНоменклатура.НоменклатураПредставление,Превышение);
						Сообщение.Сообщить();
						Отказ = Истина; 
					Иначе
						Сообщение = Новый СообщениеПользователю;
						Сообщение.Текст = СтрШаблон("В результате проведения документа образовались отрицательные остатки по номенклатуре ""%1"" в кличестве %2",ВыборкаНоменклатура.НоменклатураПредставление,Превышение);
						Сообщение.Сообщить(); 
					КонецЕсли;
				Если Отказ Тогда				
					Продолжить;				
				КонецЕсли; 
				КонецЕсли;
				
			ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе;
			ВыборкаДетальные = ВыборкаНоменклатура.Выбрать(); 
			
				Пока ВыборкаДетальные.Следующий() И ОсталосьСписать > 0 Цикл 			 
					Списываем = МИН(ВыборкаДетальные.КоличествоОстаток,ОсталосьСписать); 
					
					// Регистр Товары на складах
					Движение = Движения.ТоварыНаСкладах.ДобавитьРасход(); 
					Движение.Период = Дата;
					Движение.Номенклатура = ВыборкаДетальные.Номенклатура;
					Движение.Склад = Склад;
					Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
					Движение.Количество = Списываем;  				
					Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда			
						СуммаСписания = ВыборкаДетальные.СуммаОстаток;
					Иначе 
						СуммаСписания = ВыборкаДетальные.СуммаОстаток / ВыборкаДетальные.КоличествоОстаток * Списываем;
					КонецЕсли;
					Движение.Сумма = СуммаСписания;
					
					// Регистр Хозрасчетный (Списание себестоимости)
					Движение = Движения.Хозрасчетный.Добавить();
					Движение.Период = Дата;
					Движение.Сумма = СуммаСписания; 
					Движение.Содержание = "Списана себестоимость товарно-материальных ценностей";
					Движение.СчетКт = ВыборкаДетальные.СчетБухгалтерскогоУчета; 
					Движение.СчетДт = Планысчетов.Хозрасчетный.Продажи;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ВыборкаДетальные.Номенклатура;
					
					ОсталосьСписать = ОсталосьСписать - Списываем;
					СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма; 			
				КонецЦикла; 	
			
				Если ОсталосьСписать > 0 И ЗапретПроведения = Ложь Тогда 
					СуммаСписания = СтоимостьОбщая / ВыборкаНоменклатура.КоличествоОстаток*ОсталосьСписать; 
					
					// Регистр Товары на складах // отрицательный остаток
			    	Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
					Движение.Период = Дата;
					Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
					Движение.Склад = Склад;
					Движение.Количество = ОсталосьСписать; 
					Движение.Сумма = СуммаСписания;
					
					// Регистр Хозрасчетный (Списание себестоимости)// отрицательный остаток		
					Движение = Движения.Хозрасчетный.Добавить();
					Движение.Период = Дата;
					Движение.Сумма = СуммаСписания;
					Движение.Содержание = "Списана себестоимость товарно-материальных ценностей"; 
					Движение.СчетКт = ВыборкаНоменклатура.СчетБухгалтерскогоУчета; 
					Движение.СчетДт = Планысчетов.Хозрасчетный.Продажи;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ВыборкаНоменклатура.Номенклатура;
				КонецЕсли; 
				
			// Регистр Учет затрат	
			Движение = Движения.УчетЗатрат.Добавить();
			Движение.Период = Дата;
			Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
			Движение.Сумма = СтоимостьОбщая; 
			
		// Регистр ЗаказыКлиентов 	
		Иначе
			Если ЗначениеЗаполнено(Основание) Тогда
				Движение = Движения.ЗаказыКлиентов.ДобавитьРасход(); 
				Движение.Период = Дата;
				Движение.Клиент = Клиент;
				Движение.ЗаписьКлиента = Основание;
				Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
			КонецЕсли;
		КонецЕсли; 
		
		// Регистр Продажи	
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		Движение.Клиент = Клиент;
		Движение.Сотрудник = Сотрудник;
		Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;   		
	
	КонецЦикла;  
	// Регистр Хозрасчетный (Отражение выручки)	
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = "Отражена выручка от реализации товаров и услуг";
	Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Продажи; 
	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты] = Клиент;
	
	// Регистр Заказы клиентов(контроль повторной записи по новой методике)	
	Если  ЗначениеЗаполнено(Основание) Тогда   
		Движения.ЗаказыКлиентов.БлокироватьДляИзменения = Истина; 
		Движения.ЗаказыКлиентов.Записать();

		Запрос.Текст= "ВЫБРАТЬ
              |	ЗаказыКлиентовОстатки.Клиент КАК Клиент,
              |	ЗаказыКлиентовОстатки.ЗаписьКлиента КАК ЗаписьКлиента,
              |	ЗаказыКлиентовОстатки.Клиент.Представление КАК КлиентПредставление,
              |	ЗаказыКлиентовОстатки.ЗаписьКлиента.Представление КАК ЗаписьКлиентаПредставление,
              |	ЗаказыКлиентовОстатки.СуммаОстаток КАК СуммаОстаток
              |ИЗ
              |	РегистрНакопления.ЗаказыКлиентов.Остатки(
              |			&МоментВремени,
              |			Клиент = &Клиент
              |				И ЗаписьКлиента.Ссылка = &ЗаписьКлиента) КАК ЗаказыКлиентовОстатки";
		Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
		Запрос.УстановитьПараметр("ЗаписьКлиента", Основание); 
		Запрос.УстановитьПараметр("Клиент",Клиент);


		Результат = Запрос.Выполнить(); 

		Если Не Результат.Пустой() Тогда 
			Отказ = Истина;
    		Выборка = Результат.Выбрать();
    		Пока Выборка.Следующий() Цикл
        		Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон("""%1"" для клиента ""%2""  уже была обработана или не была найдена!", Выборка.ЗаписьКлиентаПредставление, Выборка.КлиентПредставление);
        		Сообщение.Сообщить();
			КонецЦикла; 
			
		// Ставим флаг "Услуга оказана" в документе ЗаписьКлиента
		Иначе			
			Услуга = Основание.ПолучитьОбъект();
			Услуга.УслугаОказана = Истина; 
			Услуга.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

	
