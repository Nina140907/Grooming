
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ответственный)Тогда
    	Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	УстановитьДоступностьЭлементовФормы(); 
	
	Если Объект.Ссылка.Пустая() Тогда
		Если Параметры.Свойство("Начало") Тогда
			Объект.ДатаЗаписи = Параметры.Начало;
		КонецЕсли;
		Если Параметры.Свойство("Окончание") Тогда
			Объект.ДатаОкончанияЗаписи = Параметры.Окончание;
		КонецЕсли; 
		Если Параметры.Свойство("Сотрудник") Тогда
			Объект.Сотрудник = Параметры.Сотрудник;
		КонецЕсли;
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиУслугаПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;
	Если ЗначениеЗаполнено (СтрокаТЧ.Услуга) Тогда
		СтрокаТЧ.Стоимость = РаботаСЦенами.ПолучитьЦенуПродажи(СтрокаТЧ.Услуга,,Объект.Дата); 
	Иначе
		СтрокаТЧ.Стоимость = 0;
	КонецЕсли;
	ДлительностьУслуги = РассчитатьДатуОкончанияЗаписи(); 
	Если ДлительностьУслуги = 0 Тогда
		ДлительностьУслуги = 60;
	КонецЕсли; 
	ОкончаниеЗаписи = Объект.ДатаЗаписи + ДлительностьУслуги*60;
	ОкончаниеРабочегоДня = ПолучитьОкончаниеРабочегоДня();
	Если ВремяДляСравнения(ОкончаниеЗаписи)> ВремяДляСравнения(ОкончаниеРабочегоДня) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В указанное время невозможно оказать услугу.Выберите другое время для записи!";
		Сообщение.Сообщить(); 
		Элементы.ФормаКоманднаяПанель.Доступность = Ложь;
	Иначе
		Объект.ДатаОкончанияЗаписи = ОкончаниеЗаписи;
		Элементы.ФормаКоманднаяПанель.Доступность = Истина;
	КонецЕсли;
	КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;
	Если ЗначениеЗаполнено (СтрокаТЧ.Услуга) Тогда
		СтрокаТЧ.Стоимость = РаботаСЦенами.ПолучитьЦенуПродажи(СтрокаТЧ.Услуга,,Объект.Дата); 
	Иначе
		СтрокаТЧ.Стоимость = 0;
	КонецЕсли; 
	КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементовФормы()
	Если НЕ РольДоступна("ПолныеПрава") Тогда	
		Элементы.УслугаОказана.ТолькоПросмотр = Истина;	
	КонецЕсли;                                         
КонецПроцедуры   

&НаСервере
Функция РассчитатьДатуОкончанияЗаписи() 
	ТЧУслуги = Объект.Услуги.Выгрузить(,"Услуга");
	Если ТЧУслуги.Количество() Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТЧУслуги",ТЧУслуги);
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТЧУслуги.Услуга КАК Услуга
		               |ПОМЕСТИТЬ ВТ_Номенклатура
		               |ИЗ
		               |	&ТЧУслуги КАК ТЧУслуги
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СУММА(НоменклатураСПР.ДлительностьУслуги) КАК ДлительностьУслуг
		               |ИЗ
		               |	ВТ_Номенклатура КАК ВТ_Номенклатура
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСПР
		               |		ПО ВТ_Номенклатура.Услуга = НоменклатураСПР.Ссылка"; 
		Результат = Запрос.Выполнить();
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		возврат Выборка.ДлительностьУслуг; 
	Иначе 
		возврат 0;   	
    КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ДатаЗаписиПриИзменении(Элемент)
	ДлительностьУслуги = РассчитатьДатуОкончанияЗаписи(); 
	Если ДлительностьУслуги = 0 Тогда
		ДлительностьУслуги = 60;
	КонецЕсли;
	ОкончаниеЗаписи = Объект.ДатаЗаписи + ДлительностьУслуги*60;
	ОкончаниеРабочегоДня = ПолучитьОкончаниеРабочегоДня();
	НачалоРабочегоДня = ПолучитьНачалоРабочегоДня();
	Если ВремяДляСравнения(ОкончаниеЗаписи)> ВремяДляСравнения(ОкончаниеРабочегоДня) ИЛИ ВремяДляСравнения(Объект.ДатаЗаписи) < ВремяДляСравнения(НачалоРабочегоДня) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В указанное время невозможно оказать услугу.Выберите другое время для записи!";
		Сообщение.Сообщить(); 
		Элементы.ФормаКоманднаяПанель.Доступность = Ложь; 
		Элементы.УслугиКоманднаяПанель.Доступность = Ложь;
	Иначе
		Объект.ДатаОкончанияЗаписи = ОкончаниеЗаписи;
		Элементы.ФормаКоманднаяПанель.Доступность = Истина;
		Элементы.УслугиКоманднаяПанель.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Записан заказ!");
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	ДлительностьУслуги = РассчитатьДатуОкончанияЗаписи(); 
	Если ДлительностьУслуги = NULL Тогда
		ДлительностьУслуги = 60;
	КонецЕсли; 
	ОкончаниеЗаписи = Объект.ДатаЗаписи + ДлительностьУслуги*60;
	ОкончаниеРабочегоДня = ПолучитьОкончаниеРабочегоДня(); 
	Если ВремяДляСравнения(ОкончаниеЗаписи)> ВремяДляСравнения(ОкончаниеРабочегоДня) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В указанное время невозможно оказать услугу.Выберите другое время для записи!";
		Сообщение.Сообщить(); 
		Элементы.ФормаКоманднаяПанель.Доступность = Ложь;
	Иначе
		Объект.ДатаОкончанияЗаписи = ОкончаниеЗаписи;
		Элементы.ФормаКоманднаяПанель.Доступность = Истина;
	КонецЕсли;
     
КонецПроцедуры

&НаСервере
Функция ПолучитьОкончаниеРабочегоДня()
	 ОкончаниеРабочегоДня = Константы.ОкончаниеРабочегоДня.Получить();
	 Возврат ОкончаниеРабочегоДня;
 КонецФункции
 
&НаСервере
 Функция ПолучитьНачалоРабочегоДня()
	 НачалоРабочегоДня = Константы.НачалоРабочегоДня.Получить();
	 Возврат НачалоРабочегоДня;
 КонецФункции
	 
&НаКлиенте
Функция ВремяДляСравнения(Время)
	ВремяЧисло = Час(Время)*3600 + Минута(Время)*60 + Секунда(Время); 
	Возврат  ВремяЧисло;
КонецФункции
	
