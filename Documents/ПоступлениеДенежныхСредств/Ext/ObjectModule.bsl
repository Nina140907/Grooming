
Процедура ОбработкаПроведения(Отказ, РежимПроведения)  
	Движения.ДенежныеСредства.Записывать = Истина;  
	Движения.БезналичнаяОплата.Записывать = Истина;   
	Если ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Наличные Тогда
		Движение = Движения.ДенежныеСредства.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.БанковскийСчетКасса = Касса;
		Движение.ТипДенежныхСредств = ТипДенежныхСредств;
		Движение.Сумма = СуммаДокумента; 		
	ИначеЕсли ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные Тогда
		Движение = Движения.БезналичнаяОплата.Добавить();
		Движение.Период = Дата;
		Движение.ЭквайринговыйТерминал = ЭквайринговыйТерминал;
		Движение.Сумма = СуммаДокумента;
	КонецЕсли; 
	
	АналитикаПроводки = ПолучитьАналитикуПроводки();
	Если ВидОперации <> Перечисления.ВидыОперацийПоступленияДенег.ПоступлениеИзДругойКассы Тогда
		Движения.Хозрасчетный.Записывать = Истина;
		Движение = Движения.Хозрасчетный.Добавить(); 
		Движение.СчетДт = АналитикаПроводки.СчетДебета; 
		Движение.СчетКт = АналитикаПроводки.СчетКредита;
		Движение.Период = Дата;
		Движение.Сумма = СуммаДокумента;
		Движение.Содержание = АналитикаПроводки.Содержание;
		БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебета);
		БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредита);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		СтруктураОплаты = Документы.РеализацияТоваровИУслуг.ПроверитьОплатуДокумента(ДокументОснование); 
		Запрос = Новый Запрос; 
		Запрос.УстановитьПараметр("Ссылка",ДокументОснование);
		Запрос.Текст = "ВЫБРАТЬ
		|	РеализацияТоваровИУслуг.ПризнакОплаты КАК ПризнакОплаты
		|ИЗ
		|	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
		|ГДЕ
		|	РеализацияТоваровИУслуг.Ссылка = &Ссылка";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		Если СтруктураОплаты.ПризнакОплаты <> Выборка.ПризнакОплаты Тогда
			Реализация = ДокументОснование.ПолучитьОбъект();
			Реализация.ПризнакОплаты = СтруктураОплаты.ПризнакОплаты; 
			Реализация.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 

Функция ПолучитьАналитикуПроводки()
	ОплатаОтПокупателя = Перечисления.ВидыОперацийПоступленияДенег.ОплатаОтПокупателя;
	ВозвратОтПоставщика = Перечисления.ВидыОперацийПоступленияДенег.ВозвратОтПоставщика;
	ПолучениеНаличныхВБанке = Перечисления.ВидыОперацийПоступленияДенег.ПолучениеНаличныхВБанке;
	ВозвратОтПодотчетника = Перечисления.ВидыОперацийПоступленияДенег.ВозвратОтПодотчетника;
	ОплатаПоКарте = перечисления.ТипыДенежныхСредств.Безналичные; 
	ПоступлениеИзДругойКассы = Перечисления.ВидыОперацийПоступленияДенег.ПоступлениеИзДругойКассы;
	СтруктураАналитики = Новый Структура;
	СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.Касса);
	СтруктураАналитики.Вставить("СубконтоДебета", Касса); 
	Если ВидОперации = ОплатаОтПокупателя Тогда
		Если ТипДенежныхСредств = ОплатаПоКарте Тогда
			СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.ПереводыВПути);
			СтруктураАналитики.Вставить("СубконтоДебета",ЭквайринговыйТерминал);
			Структурааналитики.Вставить("Содержание", "Оплата от покупателя банковской картой");
		Иначе
			СтруктураАналитики.Вставить("Содержание","Оплата от покупателя наличными в кассу");
		КонецЕсли;
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);
		СтруктураАналитики.Вставить("СубконтоКредита", Плательщик);
	ИначеЕсли ВидОперации = ВозвратОтПоставщика Тогда
		СтруктураАналитики.Вставить("Содержание", "Возврат от поставщика наличными в кассу");
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
		СтруктураАналитики.Вставить("СубконтоКредита",Плательщик);
	ИначеЕсли ВидОперации = ПолучениеНаличныхВБанке Тогда
		СтруктураАналитики.Вставить("Содержание","Получение наличных денег с расчетного счета в кассу");
		СтруктураАналитики.Вставить("СчетКредита",ПланыСчетов.Хозрасчетный.РасчетныйСчет);
		СтруктураАналитики.Вставить("СубконтоКредита",РасчетныйСчет);
	ИначеЕсли ВидОперации = ВозвратОтПодотчетника Тогда
		Структурааналитики.Вставить("Содержание", "Возврат подотчетных средств");
		СтруктураАналитики.Вставить("СчетКредита",ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
		СтруктураАналитики.Вставить("СубконтоКредита",Плательщик);	
	КонецЕсли;
	
	Возврат СтруктураАналитики;
КонецФункции

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровИУслуг") Тогда
		ДанныеДокументаОснования  = ПолучитьДанныеПоОплатеПоРеализацииТоваров(ДанныеЗаполнения);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеДокументаОснования);
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьДанныеПоОплатеПоРеализацииТоваров(ДанныеЗаполнения)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);
	Запрос.Текст = "ВЫБРАТЬ
	|	РеализацияТоваровИУслуг.Ссылка КАК ДокументОснование,
	|	РеализацияТоваровИУслуг.Клиент КАК Плательщик,
	|	РеализацияТоваровИУслуг.СуммаДокумента КАК СуммаДокумента
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|ГДЕ
	|	РеализацияТоваровИУслуг.Ссылка = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	возврат Выборка; 	
	
КонецФункции  