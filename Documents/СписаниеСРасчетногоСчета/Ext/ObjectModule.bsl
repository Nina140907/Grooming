
Процедура ОбработкаПроведения(Отказ, Режим)
	Движения.ДенежныеСредства.Записывать = Истина; 
	Движения.Хозрасчетный.Записывать = Истина;
	
	Движение = Движения.ДенежныеСредства.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные;
	Движение.БанковскийСчетКасса = РасчетныйСчет;
	Движение.Сумма = СуммаДокумента;  
	
	АналитикаПроводки = ПолучитьАналитикуПроводки(); 
	Если ВидОперации <> Перечисления.ВидыОперацийСписанияСРасчетногоСчета.СнятиеНаличныхВКассу Тогда
		Движение = Движения.Хозрасчетный.Добавить(); 
		Движение.Период = Дата;
		Движение.Сумма = СуммаДокумента;
		Движение.СчетДт = АналитикаПроводки.СчетДебета;
		Движение.СчетКт = АналитикаПроводки.СчетКредита;
		Движение.Содержание = АналитикаПроводки.Содержание;
		БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебета);
        БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредита); 
	КонецЕсли;

КонецПроцедуры  

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	ТипДокументаОснования =  ТипЗнч(ДанныеЗаполнения); 
	ТипДокументаРеализацииТоваровИУслуг = Тип("ДокументСсылка.РеализацияТоваровИУслуг");
	ТипДокументаПоступленияТоваровИМатериалов = Тип("ДокументСсылка.ПоступлениеТоваровИМатериалов");
	ТипДокументаПоступленияУслуг = Тип("ДокументСсылка.ПоступлениеУслуг");
	
	ДанныеЗаполненияОснования = Новый Структура;
	
	Если ТипДокументаОснования = ТипДокументаРеализацииТоваровИУслуг Тогда
		ДанныеЗаполненияОснования = ПолучитьДанныеРеализацииТоваровИУслуг(ДанныеЗаполнения);
	ИначеЕсли ТипДокументаОснования = ТипДокументаПоступленияТоваровИМатериалов Тогда
		ДанныеЗаполненияОснования = ПолучитьДанныеПоступленияТоваровИМатериалов(ДанныеЗаполнения);
	ИначеЕсли ТипДокументаОснования = ТипДокументаПоступленияУслуг Тогда
		ДанныеЗаполненияОснования = ПолучитьДанныеПоступленияУслуг(ДанныеЗаполнения);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект,данныеЗаполненияОснования);
		
КонецПроцедуры 

Функция ПолучитьДанныеРеализацииТоваровИУслуг(ДанныеЗаполнения)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровИУслуг.Ссылка КАК ДокументОснование,
	               |	РеализацияТоваровИУслуг.Клиент КАК Получатель,
	               |	РеализацияТоваровИУслуг.СуммаДокумента КАК СуммаДокумента,
	               |	ЗНАЧЕНИЕ(Перечисление.ВидыоперацийСписанияСРасчетногоСчета.ВозвратПокупателю) КАК ВидОперации
	               |ИЗ
	               |	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	               |ГДЕ
	               |	РеализацияТоваровИУслуг.Ссылка = &Ссылка";
	Результат = Запрос.Выполнить().Выбрать();
	Результат.Следующий();
	Возврат Результат;
КонецФункции

Функция ПолучитьДанныеПоступленияТоваровИМатериалов(ДанныеЗаполнения)
	Запрос = Новый запрос;
	Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеТоваровИМатериалов.Ссылка КАК ДокументОснование,
	               |	ПоступлениеТоваровИМатериалов.Поставщик КАК Получатель,
	               |	ПоступлениеТоваровИМатериалов.СуммаДокумента КАК СуммаДокумента,
	               |	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику) КАК ВидОперации
	               |ИЗ
	               |	Документ.ПоступлениеТоваровИМатериалов КАК ПоступлениеТоваровИМатериалов
	               |ГДЕ
	               |	ПоступлениеТоваровИМатериалов.Ссылка = &Ссылка";
	Результат = Запрос.Выполнить().Выбрать();
	Результат.Следующий();
	Возврат Результат;
КонецФункции

Функция ПолучитьДанныеПоступленияУслуг(ДанныеЗаполнения)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеУслуг.Ссылка КАК ДокументОснование,
	               |	ПоступлениеУслуг.Поставщик КАК Получатель,
	               |	ПоступлениеУслуг.СуммаДокумента КАК СуммаДокумента,
	               |	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику) КАК ВидОперации
	               |ИЗ
	               |	Документ.ПоступлениеУслуг КАК ПоступлениеУслуг
	               |ГДЕ
	               |	ПоступлениеУслуг.Ссылка = &Ссылка";
	Результат = Запрос.Выполнить().Выбрать();
	Результат.Следующий();
	Возврат Результат;
КонецФункции

Функция ПолучитьАналитикуПроводки()
	ОплатаПоставщику = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику;
	ВозвратПокупателю = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ВозвратПокупателю;
	ПеречислениеПодотчетномуЛицу = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ПеречислениеПодотчетномуЛицу;
	ПеречислениеЗаработнойПлаты = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ПеречислениеЗаработнойПлаты;
	ПереводНаДругойСчет = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ПереводНаДругойСчетПредприятия;
	
	СтруктураАналитики = Новый Структура;
	СтруктураАналитики.Вставить("СчетКредита", Планысчетов.Хозрасчетный.РасчетныйСчет);
	СтруктураАналитики.Вставить("СубконтоКредита",РасчетныйСчет);
	
	Если ВидОперации = ОплатаПоставщику Тогда 
		СтруктураАналитики.Вставить("СчетДебета",ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
		СтруктураАналитики.Вставить("СубконтоДебета",Получатель);
		СтруктураАналитики.Вставить("Содержание","Оплата поставщику с расчетного счета");
	ИначеЕсли ВидОперации = ВозвратПокупателю Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);
		СтруктураАналитики.Вставить("СубконтоДебета",Получатель);
	    СтруктураАналитики.Вставить("Содержание","Возврат средств покупателю с расчетного счета");
	ИначеЕсли ВидОперации = ПеречислениеПодотчетномуЛицу Тогда
		СтруктураАналитики.Вставить("СчетДебета", Планысчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
		Структурааналитики.Вставить("Субконтодебета", Получатель);
		СтруктураАналитики.Вставить("Содержание","Перечисление подотчетнику с расчетного счета");
	ИначеЕсли ВидОперации = ПеречислениеЗаработнойПлаты Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
		СтруктураАналитики.Вставить("СубконтоДебета",Получатель);
		СтруктураАналитики.Вставить("Содержание", "Выплата заработной платы на счет сотрудника");
	ИначеЕсли ВидОперации = ПереводНаДругойСчет Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетныйСчет);
		СтруктураАналитики.Вставить("СубконтоДебета", СчетПолучатель);
		СтруктураАналитики.Вставить("Содержание", "Перевод денежных средств на другой расчетный счет предприятия")
	КонецЕсли;
	Возврат СтруктураАналитики;
КонецФункции
		
		






