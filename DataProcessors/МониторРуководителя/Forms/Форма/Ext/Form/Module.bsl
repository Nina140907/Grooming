&НаКлиенте
Процедура Обновить(Команда)
	ЗаполнитьДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеНаСервере()
	ЗаполнитьЧисловыеПоказатели();
	ЗаполнитьГистограммы();
	ЗаполнитьКруговыеДиаграммы(); 
	ЗаполнитьБлокОПитомцах();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПериодОбработки = НачалоМесяца(ТекущаяДата());
	МесяцСтрокой = Формат(ПериодОбработки, "ДФ = 'ММММ,гггг'");
	ЗаполнитьДанныеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Подсказка = "Введите период получения данных";
	ЧастьДаты = ЧастиДаты.Дата; 
	Оповещение = Новый ОписаниеОповещения("ПослеВводаПериода", ЭтотОбъект);
	ПоказатьВводДаты(Оповещение,ПериодОбработки, Подсказка, ЧастьДаты);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаПериода(Результат,ДополнительныеПараметры) экспорт
	Если Результат <> Неопределено Тогда
		ПериодОбработки = НачалоМесяца(Результат);
		МесяцСтрокой = Формат(ПериодОбработки, "ДФ = 'ММММ,гггг'");
	КонецЕсли;
	ЗаполнитьДанныеНаСервере();
КонецПроцедуры 

&Насервере
Процедура ЗаполнитьЧисловыеПоказатели()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала",ПериодОбработки);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодОбработки));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПродажиОбороты.СуммаОборот КАК СуммаОборот,
	               |	ПродажиОбороты.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ ВТ_Продажи
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК ПродажиОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ВТ_Продажи.СуммаОборот) КАК СуммаОборот
	               |ИЗ
	               |	ВТ_Продажи КАК ВТ_Продажи
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ВТ_Продажи.СуммаОборот) КАК СуммаОборот,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Продажи.Регистратор) КАК Регистратор
	               |ПОМЕСТИТЬ ВТ_КоличествоРегистраторов
	               |ИЗ
	               |	ВТ_Продажи КАК ВТ_Продажи
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА ВТ_КоличествоРегистраторов.Регистратор = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ВЫРАЗИТЬ(ВТ_КоличествоРегистраторов.СуммаОборот / ВТ_КоличествоРегистраторов.Регистратор КАК ЧИСЛО(10, 2))
	               |	КОНЕЦ КАК СреднийЧек,
	               |	ВТ_КоличествоРегистраторов.СуммаОборот КАК СуммаОборот
	               |ИЗ
	               |	ВТ_КоличествоРегистраторов КАК ВТ_КоличествоРегистраторов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаказыКлиентовОбороты.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ ВТ_ЗаписиКлиентов
	               |ИЗ
	               |	РегистрНакопления.ЗаказыКлиентов.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК ЗаказыКлиентовОбороты
	               |ГДЕ
	               |	ЗаказыКлиентовОбороты.Регистратор ССЫЛКА Документ.ЗаписьКлиента
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ЗаписиКлиентов.Регистратор) КАК КоличествоЗаписейКлиента
	               |ИЗ
	               |	ВТ_ЗаписиКлиентов КАК ВТ_ЗаписиКлиентов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ЗаписиКлиентов.Регистратор) КАК Завершенных
	               |ИЗ
	               |	ВТ_ЗаписиКлиентов КАК ВТ_ЗаписиКлиентов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Продажи КАК ВТ_Продажи
	               |		ПО ВТ_ЗаписиКлиентов.Регистратор = ВТ_Продажи.Регистратор.Основание";
	ВсегоЗаписей = 0;
	РезультатПакет = Запрос.ВыполнитьПакет();
	ВыборкаПродажи = РезультатПакет[1].Выбрать();
	Если ВыборкаПродажи.Следующий() Тогда
		ВыручкаЧисло = ВыборкаПродажи.СуммаОборот;
	КонецЕсли;
	
	ВыборкаСреднийЧек = РезультатПакет[3].Выбрать();
	Если ВыборкаСреднийЧек.Следующий() Тогда
		СреднийЧек = ВыборкаСреднийЧек.СреднийЧек;
	КонецЕсли;
	
	ВыборкаВсегоЗаписей = РезультатПакет[5].Выбрать();
	Если ВыборкаВсегоЗаписей.Следующий()Тогда
		ВсегоЗаписей = ВыборкаВсегоЗаписей.КоличествоЗаписейКлиента;
	КонецЕсли;
	
	ВыборкаЗавершенных = РезультатПакет[6].Выбрать();
	Если ВыборкаЗавершенных.Следующий() Тогда
		Завершенных = ВыборкаЗавершенных.Завершенных;	 
		Если ВсегоЗаписей > 0 Тогда
			ПроцентЗавершенных = ОКР(Завершенных*100/ВсегоЗаписей,2);
			ЗавершенныхПроцентСтрока = СтрШаблон("Это %1 процентов от всех записей", ПроцентЗавершенных);
		Иначе 
			ЗавершенныхПроцентСтрока = "В этом периоде нет записей клиентов";
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГистограммы()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала",ПериодОбработки);
	Запрос.УстановитьПараметр("ДатаОкончания",КонецМесяца(ПериодОбработки));
	Запрос.Текст = "ВЫБРАТЬ
	|	ПродажиОбороты.СуммаОборот КАК СуммаОборот,
	|	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ) КАК Период
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК ПродажиОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ
	|	СУММА(СуммаОборот)
	|ПО
	|	Период ПЕРИОДАМИ(ДЕНЬ, &ДатаНачала, &ДатаОкончания)";
	
	ДиаграммаВыручка.Обновление = Ложь;
	ДиаграммаВыручка.Очистить();  
	
	Серия = ДиаграммаВыручка.Серии.Добавить("Оборот");
	
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Период", "Все");
	Пока Выборка.Следующий() Цикл
		Точка = ДиаграммаВыручка.Точки.Добавить(Выборка.Период);
		Точка.Текст = Формат(Выборка.Период, "ДФ = дд.ММ.гг");   
		Подсказка = "Выручка " + Выборка.СуммаОборот + "на " + Формат(Выборка.Период, "ДФ = дд.ММ.гггг");
		ДиаграммаВыручка.УстановитьЗначение(Точка,Серия,Выборка.СуммаОборот,Точка.Расшифровка,Подсказка);
	КонецЦикла;
	
	ДиаграммаВыручка.Обновление = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКруговыеДиаграммы()
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПродажиОбороты.Номенклатура КАК Номенклатура,
	|	СУММА(ПродажиОбороты.СуммаОборот) КАК СуммаОборот
	|ПОМЕСТИТЬ ВТ_КонкретныеУслуги
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) КАК ПродажиОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПродажиОбороты.СуммаОборот) КАК СуммаОборот
	|ПОМЕСТИТЬ ВТ_ОбщаяВыручка
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, , ) КАК ПродажиОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КонкретныеУслуги.Номенклатура КАК Номенклатура,
	|	ВТ_КонкретныеУслуги.СуммаОборот КАК Сумма,
	|	ВТ_ОбщаяВыручка.СуммаОборот КАК ОбщаяСумма
	|ПОМЕСТИТЬ ВТ_Предытог
	|ИЗ
	|	ВТ_КонкретныеУслуги КАК ВТ_КонкретныеУслуги
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ОбщаяВыручка КАК ВТ_ОбщаяВыручка
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТ_Предытог.Сумма * 100 / ВТ_Предытог.ОбщаяСумма > 0
	|			ТОГДА ВТ_Предытог.Номенклатура.Представление
	|		ИНАЧЕ ""Прочее""
	|	КОНЕЦ КАК Номенклатура,
	|	СУММА(ВТ_Предытог.Сумма) КАК Сумма
	|ИЗ
	|	ВТ_Предытог КАК ВТ_Предытог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ВТ_Предытог.Сумма * 100 / ВТ_Предытог.ОбщаяСумма > 0
	|			ТОГДА ВТ_Предытог.Номенклатура.Представление
	|		ИНАЧЕ ""Прочее""
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПродажиОбороты.СуммаОборот) КАК СуммаОборот,
	|	ПродажиОбороты.Сотрудник.Представление КАК Сотрудник
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК ПродажиОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.Сотрудник.Представление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ПродажиОбороты.Клиент.ИсточникиИнформацииОКомпании, ""Не указан"") КАК ИсточникиИнформацииОКомпании,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродажиОбороты.Клиент) КАК Количество
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК ПродажиОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ПродажиОбороты.Клиент.ИсточникиИнформацииОКомпании, ""Не указан"")";
	
	Запрос.УстановитьПараметр("ДатаНачала", ПериодОбработки);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодОбработки));
	РезультатПакет = Запрос.ВыполнитьПакет(); 
	ЗаполнитьДиаграммуПоРекламнымИсточникам(РезультатПакет[РезультатПакет.Количество()-1]); 
	ЗаполнитьДиаграммуПоСотрудникам(РезультатПакет[РезультатПакет.Количество()-2]);
	ЗаполнитьДиаграммуПоУслугам(РезультатПакет[РезультатПакет.Количество()-3]);
	
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьДиаграммуПоРекламнымИсточникам(РезультатПакет)
	ДиаграммаПоРекламнымИсточникам.Обновление = Ложь;
	ДиаграммапоРекламнымИсточникам.Очистить(); 
	
	Точка = ДиаграммаПоРекламнымИсточникам.Точки.Добавить("Количество");
	Точка.Текст = "Количество";	
	
	Выборка = РезультатПакет.Выбрать();
	Пока Выборка.Следующий() Цикл
		Серия = ДиаграммаПорекламнымИсточникам.Серии.Добавить(Выборка.ИсточникиИнформацииОКомпании); 
		Серия.Текст = Выборка.ИсточникиИнформацииОКомпании;
		ДиаграммаПоРекламнымисточникам.УстановитьЗначение(Точка,Серия,Выборка.Количество,Строка(Выборка.Количество));
	КонецЦикла; 
	
	ДиаграммаПоРекламнымисточникам.Обновление = Истина; 
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьДиаграммуПоСотрудникам(РезультатПакет)
	ДиаграммаПоСотрудникам.Обновление = Ложь;
	ДиаграммаПоСотрудникам.Очистить();
	
	Точка = ДиаграммаПоСотрудникам.Точки.Добавить("СуммаОборот");
	Точка.Текст = "Выручка";
	
	Выборка = РезультатПакет.Выбрать();
	Пока Выборка.Следующий() Цикл
		Серия = ДиаграммаПоСотрудникам.Серии.Добавить(Выборка.Сотрудник);
		Серия.Текст = Выборка.Сотрудник;
		ДиаграммаПоСотрудникам.УстановитьЗначение(Точка,Серия,Выборка.СуммаОборот);
	КонецЦикла;   
	
	ДиаграммаПоСотрудникам.Обновление = Истина; 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДиаграммуПоУслугам(РезультатПакет)
	ДиаграммаПоУслугам.Обновление = Ложь;
	ДиаграммаПоУслугам.Очистить();
	
	Точка = ДиаграммаПоУслугам.Точки.Добавить("Сумма");
	Точка.Текст = "Выручка";
	
	Выборка = РезультатПакет.Выбрать();
	Пока Выборка.Следующий() Цикл
		Серия = ДиаграммаПоУслугам.Серии.Добавить(Выборка.Номенклатура);
		Серия.Текст = Выборка.Номенклатура;
		ДиаграммаПоУслугам.УстановитьЗначение(Точка,Серия,Выборка.Сумма);
	КонецЦикла;
	
	ДиаграммаПоУслугам.Обновление = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьБлокОПитомцах()
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА КонтрагентыПитомцы.ВидПитомца = ЗНАЧЕНИЕ(Перечисление.ВидыПитомцев.Кошка)
	|			ТОГДА ""Кошка""
	|		ИНАЧЕ ""Собака""
	|	КОНЕЦ КАК ВидПитомца,
	|	КОЛИЧЕСТВО(КонтрагентыПитомцы.ВидПитомца) КАК Количество
	|ИЗ
	|	Справочник.Контрагенты.Питомцы КАК КонтрагентыПитомцы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА КонтрагентыПитомцы.ВидПитомца = ЗНАЧЕНИЕ(перечисление.ВидыПитомцев.Кошка)
	|			ТОГДА ""Кошка""
	|		ИНАЧЕ ""Собака""
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КонтрагентыПитомцы.ВидПитомца = ЗНАЧЕНИЕ(Перечисление.ВидыПитомцев.Кошка)
	|			ТОГДА ""Кошка""
	|		ИНАЧЕ ""Собака""
	|	КОНЕЦ"; 
	КоличествоКошек = 0;
	КоличествоСобак = 0;
	Результат = Запрос.Выполнить(); 
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.ВидПитомца = "Кошка" Тогда
				КоличествоКошек = Выборка.Количество;
			Иначе 
				КоличествоСобак = Выборка.Количество;
			КонецЕсли;
		КонецЦикла;    
		ПроцентКошек = Строка(ОКР(КоличествоКошек*100/(КоличествоКошек + КоличествоСобак),0,0)) + "%";
		ПроцентСобак = Строка(ОКР(КоличествоСобак*100/(КоличествоКошек + КоличествоСобак),0,1)) + "%";
		Элементы.ДекорацияКоличествоПитомцев.Заголовок = СТРШаблон("Кошек - %1(%2), Собак - %3(%4)", КоличествоКошек,ПроцентКошек,КоличествоСобак,ПроцентСобак);   
	Иначе
		Элементы.ДекорацияКоличествоПитомцев.Заголовок = "На данный момент питомцы клиентов отсутствуют в базе"
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКурсыВалютИНовости(Команда) 
	ПолучитьКурсыВалютПоДаннымЦентробанкаНаСервере();
	ЗагрузитьНовостиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьКурсыВалютПоДаннымЦентробанкаНаСервере()
	Сервер = "cbr.ru"; 
	АдресЗапроса = "/scripts/XML_daily.asp?date_req=" + Формат(ДатаЗагрузкиНовостей, "ДФ=dd/MM/yyyy");;
	ВозвращаемоеЗначение = РаботаСHTTP.ПолучитьДанныеИзСервиса(Сервер, АдресЗапроса); 
	
	Если ВозвращаемоеЗначение.УспешныйЗапрос = Ложь Тогда    
		Сообщить(ВозвращаемоеЗначение.ТекстОшибки);
		возврат;
	ИначеЕсли ВозвращаемоеЗначение.HTTPОтвет.КодСостояния <> 200 Тогда 
		Сообщить(СтрШаблон("Код вернул код состояния, отличный от 200: %1", ВозвращаемоеЗначение.HTTPОтвет.КодСостояния));
		возврат;
	КонецЕсли;
	
	СтрокаXML = ВозвращаемоеЗначение.HTTPОтвет.ПолучитьТелоКакСтроку(); 
	ПрочитатьИзXMLПоследовательно(СтрокаXML); 
	
КонецПроцедуры  

&НаСервере
Процедура ПрочитатьИзXMLПоследовательно(СтрокаXML)
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(СтрокаXML); 
	Валюта = Неопределено;
	
	Пока ЧтениеXML.Прочитать() Цикл 
		//ищем ID= R01235 (доллар) R01239 (евро) R01335 (тенге)
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			НужнаяВалюта = Ложь;
			
			Пока ЧтениеXML.ПрочитатьАтрибут() Цикл 
				Если  ЧтениеXML.Имя = "ID" И ЧтениеXML.Значение = "R01235" Тогда
					Валюта = "USD";
				ИначеЕсли ЧтениеXML.Имя = "ID" И ЧтениеXML.Значение = "R01239" Тогда
					Валюта = "EURO";
				ИначеЕсли ЧтениеXML.Имя = "ID" И ЧтениеXML.Значение = "R01335" Тогда
					Валюта = "KZT";
				Иначе
					Валюта = Неопределено;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если Валюта <> Неопределено
			И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента
			И ЧтениеXML.Имя = "VunitRate" Тогда
			ЧтениеXML.Прочитать();
			Если Валюта = "USD" Тогда 
				КурсДоллара = ЧтениеXML.Значение;
			ИначеЕсли Валюта = "EURO" Тогда
				КурсЕвро = ЧтениеXML.Значение;
			ИначеЕсли Валюта = "KZT" Тогда
				КурсТенге = ЧтениеXML.Значение * 100;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЧтениеXML.Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНовостиНаСервере()
	ТопНовости = ""; 
	Сервер = "newsapi.org"; 
	АдресЗапроса = "/v2/everything";
	ПараметрыЗапроса = СтрШаблон("apiKey=%1&sortBy=popularity&from=%2&q=%3&language=%4", СокрЛП(Константы.API_KEY_newsapi.Получить()),
	Формат(ДатаЗагрузкиНовостей, "ДФ=yyyy-MM-dd"), СокрЛП(СтрокаПоиска),ЯзыкПоиска); 
	АдресЗапроса = АдресЗапроса + "?" + ПараметрыЗапроса;
	ВозвращаемоеЗначение = РаботаСHTTP.ПолучитьДанныеИзСервиса(Сервер, АдресЗапроса); 
	Если ВозвращаемоеЗначение.УспешныйЗапрос = Ложь Тогда
		Сообщить(ВозвращаемоеЗначение.ТекстОшибки);
		возврат;
	ИначеЕсли ВозвращаемоеЗначение.HTTPОтвет.КодСостояния <> 200 Тогда
		Сообщить(СтрШаблон("Код вернул код состояния, отличный от 200: %1", ВозвращаемоеЗначение.HTTPОтвет.КодСостояния));
		возврат;
	КонецЕсли;
	
	СтрокаJSON = ВозвращаемоеЗначение.HTTPОтвет.ПолучитьТелоКакСтроку(); 
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	Новости = ПрочитатьJSON(ЧтениеJSON, Ложь);
	ЧтениеJSON.Закрыть();
	
	Итератор = 1;
	
	Если Новости <> Неопределено Тогда 
		МассивНовости = Новый массив;
		Для Каждого Статья Из Новости.articles Цикл  					
			СтрокаПервая = СтрШаблон("%1) Источник: %2", Строка(Итератор),Статья.url);
			СтрокаВторая = СтрШаблон("%1", Статья.title);
			СтрокаТретья = СтрШаблон("%1%2", Статья.description, Символы.ПС);
			МассивНовости.Добавить(СтрокаПервая);
			МассивНовости.Добавить(СтрокаВторая);
			МассивНовости.Добавить(СтрокаТретья); 
			Если Итератор = КоличествоНовостей Тогда
				прервать;
			КонецЕсли;
			Итератор = Итератор + 1;
		КонецЦикла; 
		ТопНовости = СтрСоединить(МассивНовости, Символы.ПС);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ГруппаСтраницаПриСменеСтраницыНаСервере()
	Элементы.КурсЕвро.Заголовок = "1" + Символ(8364);
	Элементы.КурсТенге.Заголовок = "100" + Символ(8376); 
	ДатаЗагрузкиНовостей = Текущаядата();
	КоличествоНовостей = 10;
	СтрокаПоиска = "Бизнес";
	ЯзыкПоиска = "ru";
	ПолучитьКурсыВалютПоДаннымЦентробанкаНаСервере();
	ЗагрузитьНовостиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницаПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.ГруппаНовости Тогда
		ГруппаСтраницаПриСменеСтраницыНаСервере();
	КонецЕсли;
КонецПроцедуры



