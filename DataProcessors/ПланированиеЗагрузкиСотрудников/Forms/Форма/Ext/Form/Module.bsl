
&НаКлиенте
Процедура Вперед(Команда)
	УстановитьПредставлениеПериода("Вперед"); 
	Планировщик.Измерения.Очистить(); 
	Планировщик.Элементы.Очистить();
	ЗаполнитьПланировщикНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	УстановитьПредставлениеПериода("Назад");
	Планировщик.Измерения.Очистить(); 
	Планировщик.Элементы.Очистить();
	ЗаполнитьПланировщикНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Сегодня(Команда)
	УстановитьПредставлениеПериода("Сегодня"); 
	Планировщик.Измерения.Очистить(); 
	Планировщик.Элементы.Очистить();
	ЗаполнитьПланировщикНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВариантПериода) Тогда
		ВариантПериода = "День";
	КонецЕсли;
	УстановитьОтображениеПланировщика();
	ЗаполнитьПланировщикНаСервере();  
КонецПроцедуры                          

&НаСервере
Процедура УстановитьОтображениеПланировщика()
	НачалоРабочегоДня = Формат(Константы.НачалоРабочегоДня.Получить(),"ДФ=ч");
	ОкончаниеРабочегоДня = Формат(Константы.ОкончаниеРабочегоДня.Получить(),"ДФ=ЧЧ");
	Планировщик.ОтступСНачалаПереносаШкалыВремени = НачалоРабочегоДня;
	Планировщик.ОтступСКонцаПереносаШкалыВремени = ?(ОкончаниеРабочегоДня = 0, 0, 24-ОкончаниеРабочегоДня);
	Планировщик.ФорматПеренесенныхЗаголовковШкалыВремени = "ДФ = 'дддд,д ММММ гггг'";
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПланировщикНаСервере() 
	ТекущийПериод = Планировщик.ТекущиеПериодыОтображения[0]; 
	ДатаНачала = ТекущийПериод.Начало;
	ДатаОкончания = Текущийпериод.Конец;
	
	Запрос = Новый Запрос; 
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаписьКлиента.Ссылка КАК ЗаписьКлиента,
	|	ЗаписьКлиента.Клиент КАК Клиент,
	|	ЗаписьКлиента.Клиент.Представление КАК КлиентПредставление,
	|	ЗаписьКлиента.Сотрудник КАК Сотрудник,
	|	ЗаписьКлиента.Сотрудник.Представление КАК СотрудникПредставление,
	|	ЗаписьКлиента.УслугаОказана КАК УслугаОказана,
	|	ЗаписьКлиента.ДатаЗаписи КАК ДатаЗаписи,
	|	ЗаписьКлиента.ДатаОкончанияЗаписи КАК ДатаОкончанияЗаписи
	|ПОМЕСТИТЬ ВТ_ЗаписьКлиента
	|ИЗ
	|	Документ.ЗаписьКлиента КАК ЗаписьКлиента
	|ГДЕ
	|	ЗаписьКлиента.ДатаЗаписи МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ЗаписьКлиента.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РеализацияТоваровИУслуг.ПризнакОплаты = ЗНАЧЕНИЕ(Перечисление.ПризнакиОплаты.ПолностьюОплачен)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПолностьюОплачен,
	|	ВТ_ЗаписьКлиента.ЗаписьКлиента КАК ЗаписьКлиента,
	|	ВТ_ЗаписьКлиента.Клиент КАК Клиент,
	|	ВТ_ЗаписьКлиента.КлиентПредставление КАК КлиентПредставление,
	|	ВТ_ЗаписьКлиента.Сотрудник КАК Сотрудник,
	|	ВТ_ЗаписьКлиента.СотрудникПредставление КАК СотрудникПредставление,
	|	ВТ_ЗаписьКлиента.УслугаОказана КАК УслугаОказана,
	|	ВТ_ЗаписьКлиента.ДатаЗаписи КАК ДатаЗаписи,
	|	ВТ_ЗаписьКлиента.ДатаОкончанияЗаписи КАК ДатаОкончанияЗаписи
	|ИЗ
	|	ВТ_ЗаписьКлиента КАК ВТ_ЗаписьКлиента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|		ПО ВТ_ЗаписьКлиента.ЗаписьКлиента = РеализацияТоваровИУслуг.Основание
	|ГДЕ
	|	РеализацияТоваровИУслуг.Проведен
	|	И РеализацияТоваровИУслуг.Основание.ДатаЗаписи МЕЖДУ &ДатаНачала И &ДатаОкончания
	|ИТОГИ ПО
	|	Сотрудник";			   
	Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",ДатаОкончания);
	ИзмеренияПланировщика = Планировщик.Измерения;
	ИзмеренияПланировщика.Очистить();
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ИзмерениеСотрудники = ИзмеренияПланировщика.Добавить("Сотрудники");
	Пока Выборка.Следующий() Цикл
		НовоеИзмерение = ИзмерениеСотрудники.Элементы.Добавить(Выборка.Сотрудник);
		НовоеИзмерение.Текст = Выборка.СотрудникПредставление;
		
		ВыборкаДетальные = Выборка.Выбрать();
		Пока ВыборкаДетальные.Следующий() Цикл
			
			ДатаНачала = ВыборкаДетальные.ДатаЗаписи;
			ДатаОкончания = ВыборкаДетальные.ДатаОкончанияЗаписи;
			СоответствиеЗначений = Новый Соответствие;
			СоответствиеЗначений.Вставить("Сотрудники",ВыборкаДетальные.Сотрудник);
			НовыйЭлемент = Планировщик.Элементы.Добавить(ДатаНачала,ДатаОкончания);
			НовыйЭлемент.Текст = СокрЛП(ВыборкаДетальные.КлиентПредставление);
			НовыйЭлемент.Значение = ВыборкаДетальные.ЗаписьКлиента;
			Если ВыборкаДетальные.УслугаОказана Тогда
				НовыйЭлемент.ЦветФона = Новый Цвет(255,153,0);
			Иначе 
				НовыйЭлемент.ЦветФона = Новый Цвет(255,237,175);
			КонецЕсли;
			Если ВыборкаДетальные.ПолностьюОплачен Тогда
				НовыйЭлемент.ЦветРамки = WebЦвета.Зеленый; 
			Иначе
				НовыйЭлемент.ЦветРамки = WebЦвета.Красный;
			КонецЕсли;	
			
			
			НовыйЭлемент.ЗначенияИзмерений = Новый ФиксированноеСоответствие(СоответствиеЗначений);
			
		КонецЦикла;
	КонецЦикла; 
КонецПроцедуры   

&НаКлиенте
Процедура УстановитьПредставлениеПериода(Вариант = Неопределено)
	ТекущийПериод = Планировщик.ТекущиеПериодыОтображения[0];
	
	Если Не ЗначениеЗаполнено(ТекущийПериод.Начало) Тогда
		ТекущийПериод.Начало = ТекущаяДата();
	КонецЕсли;
	
	Планировщик.ТекущиеПериодыОтображения.Очистить();
	
	Если ВариантПериода = "День" Тогда  
		Если Вариант = Неопределено Тогда
			ДатаНачала = НачалоДня(ТекущийПериод.Начало); 
		ИначеЕсли Вариант = "Назад" Тогда
			ДатаНачала = НачалоДня(ТекущийПериод.Начало) - 60*60*24;
		ИначеЕсли Вариант = "Вперед" Тогда
			ДатаНачала = НачалоДня(ТекущийПериод.Начало) + 60*60*24;
		ИначеЕсли Вариант = "Сегодня" Тогда
			ДатаНачала = НачалоДня(ТекущаяДата());
		КонецЕсли;
		ДатаОкончания = КонецДня(ДатаНачала);
		Планировщик.ТекущиеПериодыОтображения.Добавить(ДатаНачала,ДатаОкончания);
		ПредставлениеПериода = Формат(ДатаНачала,"ДФ = 'дд ММММ'");
	ИначеЕсли ВариантПериода = "Неделя" Тогда
		Если Вариант = Неопределено Тогда
			ДатаНачала = НачалоНедели(ТекущийПериод.Начало);
		ИначеЕсли Вариант = "Назад" Тогда
			ДатаНачала = НачалоНедели(ТекущийПериод.Начало) - 60*60*24*7;
		ИначеЕсли Вариант = "Вперед" Тогда
			ДатаНачала = НачалоНедели(ТекущийПериод.Начало) + 60*60*24*7;
		ИначеЕсли Вариант = "Сегодня" Тогда
			ДатаНачала = НачалоНедели(ТекущаяДата());
		КонецЕсли;    
		ДатаОкончания = КонецНедели(ДатаНачала);
		Планировщик.ТекущиеПериодыОтображения.Добавить(ДатаНачала,ДатаОкончания); 
		ПредставлениеПериода = СтрШаблон("%1 - %2", Формат(ДатаНачала,"ДФ = 'дд ММММ'"),Формат(ДатаОкончания,"ДФ = 'дд ММММ гггг'"));
	ИначеЕсли ВариантПериода = "Месяц" Тогда
		Если Вариант = Неопределено Тогда
			ДатаНачала = НачалоМесяца(ТекущийПериод.Начало);
		ИначеЕсли Вариант = "Назад" Тогда
			ДатаНачала = ДобавитьМесяц(ТекущийПериод.Начало,-1);
		ИначеЕсли Вариант = "Вперед" Тогда
			ДатаНачала = ДобавитьМесяц(ТекущийПериод.Начало, 1);
		ИначеЕсли Вариант = "Сегодня" Тогда
			ДатаНачала = НачалоМесяца(ТекущаяДата());
		КонецЕсли;
		ДатаОкончания = КонецМесяца(ДатаНачала);
		Планировщик.ТекущиеПериодыОтображения.Добавить(ДатаНачала,ДатаОкончания); 
		ПредставлениеПериода = ПредставлениеПериода(ДатаНачала,ДатаОкончания); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПериодаПриИзменении(Элемент)
	УстановитьПредставлениеПериода();
	Планировщик.Измерения.Очистить(); 
	Планировщик.Элементы.Очистить();
	ЗаполнитьПланировщикНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьПредставлениеПериода(); 
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПриСменеТекущегоПериодаОтображения(Элемент, ТекущиеПериодыОтображения, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередНачаломБыстрогоРедактирования(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыОткрытияФормы = Новый Структура("Ключ",Элемент.ВыделенныеЭлементы[0].Значение);
	ОткрытьФорму("Документ.ЗаписьКлиента.Форма.ФормаДокумента",ПараметрыОткрытияФормы,,ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередСозданием(Элемент, Начало, Конец, ЗначенияИзмерений, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыОткрытияФормы = Новый Структура("Начало,Окончание,Сотрудник",Начало,Конец,ЗначенияИзмерений.Получить("Сотрудники"));
	ОткрытьФорму("Документ.ЗаписьКлиента.Форма.ФормаДокумента",ПараметрыОткрытияФормы,,ЭтаФорма);
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия ="Записан заказ!" Тогда
		Планировщик.Элементы.Очистить();
		ЗаполнитьПланировщикНаСервере();  
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)  
	
	Планировщик.Измерения.Очистить(); 
	Планировщик.Элементы.Очистить();
	ЗаполнитьПланировщикНаСервере();
	
КонецПроцедуры





