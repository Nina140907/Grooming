&НаКлиенте
Процедура ЗагрузитьПрайсЛист(Команда)
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОповещениеОЗавершении", ЭтотОбъект);
	Если Не ЗначениеЗаполнено(ЭтаФорма.ДатаПрайсЛиста) ИЛИ Не ЗначениеЗаполнено(ЭтаФорма.Поставщик) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Заполните необходимые реквизиты!";
		Сообщение.Сообщить();
	Иначе
		НачатьПомещениеФайлаНаСервер(ОповещениеОЗавершении,,,,,УникальныйИдентификатор);
	КонецЕсли;
	КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОЗавершении(ОписаниеПомещенногоФайла,ДополнительныеПараметры) Экспорт 
	Если ОписаниеПомещенногоФайла <> Неопределено Тогда
		АдресФайла = ОписаниеПомещенногоФайла.Адрес;
		ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайла,ДатаПрайсЛиста,Поставщик);
	КонецЕсли;
КонецПроцедуры 

&НаСервереБезКонтекста
Процедура ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайла,ДатаПрайсЛиста,Поставщик)
	ТабДок = ПрочитатьФайл(АдресФайла); 
	ТаблицаПрайсЛиста = ЗаполнитьТаблицуЗначений(ТабДок); 
	Если ТаблицаПрайсЛиста.Количество() Тогда
		ЗагрузкаПрайсЛиста(ТаблицаПрайсЛиста,ДатаПрайсЛиста,Поставщик);
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Выбранный файл не содержит строк с ценами!";
		Сообщение.Сообщить(); 
	КонецЕсли;
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПрочитатьФайл(АдресФайла)
	ТабДок = Новый ТабличныйДокумент;
	ИмяВременногоФайла = ПолучитьИмявременногоФайла("xlsx");
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайла);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	Попытка 		
		ТабДок.Прочитать(ИмяВременногоФайла);
	Исключение
		вызватьИсключение "Не удалось прочитать файл EXCEL в табличный документ!";
	КонецПопытки;
	Возврат ТабДок;
КонецФункции 

&НаСервереБезКонтекста
Функция ЗаполнитьТаблицуЗначений(ТабДок)
	ОбластиТабличногоДокумента = ТабДок.Область(1,1,ТабДок.ВысотаТаблицы,ТабДок.ШиринаТаблицы);
	Построитель = Новый ПостроительЗапроса;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластиТабличногоДокумента);
	Построитель.Выполнить();
	
	ТаблицаПрайсЛиста = Построитель.Результат.Выгрузить();
	Возврат ТаблицаПрайсЛиста;	
КонецФункции  

&НаСервереБезКонтекста
Процедура ЗагрузкаПрайсЛиста(ТаблицаПрайсЛиста,ДатаПрайсЛиста,Поставщик) 
	Запрос = Новый запрос;
	запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаПрайсЛиста.Артикул КАК Артикул,
	|	ТаблицаПрайсЛиста.Цена КАК Цена
	|ПОМЕСТИТЬ ВТ_ТаблицаПрайсЛиста
	|ИЗ
	|	&ТаблицаПрайсЛиста КАК ТаблицаПрайсЛиста
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ВТ_ТаблицаПрайсЛиста.Цена КАК Цена
	|ИЗ
	|	ВТ_ТаблицаПрайсЛиста КАК ВТ_ТаблицаПрайсЛиста
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ВТ_ТаблицаПрайсЛиста.Артикул = Номенклатура.Артикул";
	Запрос.УстановитьПараметр("ТаблицаПрайсЛиста",ТаблицаПрайсЛиста);  
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	ДокументУстановкаЦен = Документы.УстановкаЦенПоставщика.СоздатьДокумент();
	ДокументУстановкаЦен.Дата = ДатаПрайсЛиста;
	ДокументУстановкаЦен.Контрагент = Поставщик; 
	ДокументУстановкаЦен.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ДокументУстановкаЦен.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
	КонецЦикла;
	
	Попытка
		
		ДокументУстановкаЦен.Записать(РежимЗаписиДокумента.Проведение);
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Создан и проведен документ %1", ДокументУстановкаЦен.Ссылка);
		Сообщение.Сообщить();
		
	Исключение
		ДокументУстановкаЦен.Записать(); 	
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Произошла ошибка при проведении документа установки цен!";
		Сообщение.Сообщить();
	КонецПопытки;  	
	
КонецПроцедуры 
